package com.user.message.app;

import javax.annotation.PostConstruct;

import org.glassfish.jersey.server.ResourceConfig;
import org.springframework.stereotype.Component;

import com.fasterxml.jackson.databind.SerializationFeature;
import com.leandronunes85.etag.responsefilter.ETagResponseFilter;
import com.user.message.api.UserMessageApi;
import com.user.message.exception.ApiExceptionMapper;

import io.swagger.jaxrs.config.BeanConfig;
import io.swagger.jaxrs.listing.ApiListingResource;
import io.swagger.util.Json;

/**
 * Jersey web server configuration
 */
@Component
public class JerseyConfig extends ResourceConfig {

	/**
	 * Runs just before startup
	 */
	@PostConstruct
	public void init() {
		// Registers APIs and filters with Jersey container 
		register(UserMessageApi.class);
		register(ApiExceptionMapper.class);
		register(ETagResponseFilter.class);
		
		// Registers swagger builder and end point
		BeanConfig config = new BeanConfig();
		register(ApiListingResource.class);
		// Sets autogenerated swagger doc values
		config.setVersion("v1");
		config.setContact("tomjaroszewskiwork@gmail.com");
		config.setSchemes(new String[] { "https" });
		config.setResourcePackage("com.user.message");
		config.setPrettyPrint(true);

		config.setConfigId("user-messages");
		config.setTitle("User Messages");
		config.setDescription("API for storing and retrieving messages for a user");
		config.setScan(true);

		// Standardize the order of the JSON keys
		Json.mapper().configure(SerializationFeature.ORDER_MAP_ENTRIES_BY_KEYS, true);
	}
}